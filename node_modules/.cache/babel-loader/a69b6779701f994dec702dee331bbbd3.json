{"ast":null,"code":"import { useState, useEffect } from 'react';\nimport youtube from \"../apis/youtube\";\nconst KEY = 'AIzaSyD2-b7jGHJaMV45LiVBQI1OVHswMcVFpqk';\n\nconst useVideos = defaultSearchTerm => {\n  const [videos, setVideos] = useState([]);\n  useEffect(() => {\n    search(defaultSearchTerm);\n  }, [defaultSearchTerm]); // const search = async term => {\n  //     const response = await youtube.get('/search', {\n  //         params: {\n  //             part: 'snippet',\n  //             type: 'video',\n  //             maxResults: 5,\n  //             key: KEY,\n  //             q: term,\n  //         },\n  //     });\n  //\n  //     setVideos(response.data.items);\n  // };\n\n  const search = defaultSearchTerm => {\n    console.log('searching');\n  };\n\n  return {\n    videos,\n    search\n  };\n};\n\nexport default useVideos();","map":{"version":3,"sources":["/Users/nadjib_belloundja/React_formation/videos-hooks/src/hooks/useVideos.js"],"names":["useState","useEffect","youtube","KEY","useVideos","defaultSearchTerm","videos","setVideos","search","console","log"],"mappings":"AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,OAAOC,OAAP,MAAoB,iBAApB;AAEA,MAAMC,GAAG,GAAG,yCAAZ;;AAEA,MAAMC,SAAS,GAAIC,iBAAD,IAAuB;AACrC,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBP,QAAQ,CAAC,EAAD,CAApC;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACZO,IAAAA,MAAM,CAACH,iBAAD,CAAN;AACH,GAFQ,EAEN,CAACA,iBAAD,CAFM,CAAT,CAHqC,CAOrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,QAAMG,MAAM,GAAIH,iBAAD,IAAuB;AAClCI,IAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ;AACH,GAFD;;AAIA,SAAO;AAAEJ,IAAAA,MAAF;AAAUE,IAAAA;AAAV,GAAP;AACH,CA1BD;;AA4BA,eAAeJ,SAAS,EAAxB","sourcesContent":["import { useState, useEffect } from 'react';\nimport youtube from \"../apis/youtube\";\n\nconst KEY = 'AIzaSyD2-b7jGHJaMV45LiVBQI1OVHswMcVFpqk';\n\nconst useVideos = (defaultSearchTerm) => {\n    const [videos, setVideos] = useState([]);\n\n    useEffect(() => {\n        search(defaultSearchTerm);\n    }, [defaultSearchTerm]);\n\n    // const search = async term => {\n    //     const response = await youtube.get('/search', {\n    //         params: {\n    //             part: 'snippet',\n    //             type: 'video',\n    //             maxResults: 5,\n    //             key: KEY,\n    //             q: term,\n    //         },\n    //     });\n    //\n    //     setVideos(response.data.items);\n    // };\n\n    const search = (defaultSearchTerm) => {\n        console.log('searching');\n    };\n\n    return { videos, search };\n};\n\nexport default useVideos();\n"]},"metadata":{},"sourceType":"module"}